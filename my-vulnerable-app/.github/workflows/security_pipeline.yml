name: Node.js DevSecOps Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./my-vulnerable-app

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    # --- Test File Creation and Upload (Debugging artifact action) ---
    - name: Create Test File
      run: echo "This is a test file to confirm artifact upload." > test_file.txt

    - name: Upload Test File
      uses: actions/upload-artifact@v4
      with:
        name: test-artifact
        path: ./test_file.txt # This should absolutely work if the directory is writable

    # --- SAST Scan (Semgrep) ---
    - name: Install Semgrep CLI
      run: |
        python3 -m pip install semgrep
        semgrep --version

    - name: Run Semgrep SAST Scan (Direct CLI)
      run: |
        # Ensure the directory exists (it should, but just in case)
        mkdir -p .
        # This command should create semgrep.sarif
        semgrep --config=p/javascript --sarif --output semgrep.sarif .
      # Add a check here - if Semgrep fails, it won't create the file.
      # Check the logs of this step carefully for any errors.

    - name: Fail build if Semgrep found critical issues (Security Gate)
      run: |
        echo "Semgrep scan completed. Review results in the downloaded artifacts."

    # --- DEBUG STEP: List files in the working directory (CRITICAL FOR YOUR RESPONSE) ---
    - name: Debug - List files in current directory
      run: ls -la

    # --- SCA & Container Scanning (Trivy) ---
    - name: Build Docker image
      run: docker build -t my-vulnerable-app:latest .

    - name: Run Trivy Container Image Scan (Vulnerabilities)
      run: |
        trivy image --exit-code 1 --severity HIGH,CRITICAL --format table my-vulnerable-app:latest

    - name: Run Trivy FS (Filesystem) Scan for Dependencies (SCA)
      run: |
        trivy fs --exit-code 1 --severity HIGH,CRITICAL --format table --vuln-type library .

    # --- Artifact Upload ---
    - name: Upload Semgrep SARIF Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: semgrep-sarif-results
        path: ./semgrep.sarif
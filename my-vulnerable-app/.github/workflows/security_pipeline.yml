name: Node.js DevSecOps Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./my-vulnerable-app # All commands will run from here unless specified

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install # This should now pass consistently!

    # --- SAST Scan (Semgrep) ---
    - name: Run Semgrep SAST Scan
      id: semgrep_scan
      uses: returntocorp/semgrep-action@v2
      with:
        config: p/javascript
        generateSarif: true # This is the input to ensure SARIF output

# --- NEW DEBUG STEP ---
    - name: Debug - Print Semgrep SARIF Path Output
      run: echo "Semgrep SARIF Path: ${{ steps.semgrep_scan.outputs.sarifFilePath }}"


    - name: Fail build if Semgrep found critical issues (Security Gate)
      run: |
        echo "Semgrep scan completed. Review results in the 'semgrep_scan' step summary and downloaded artifacts."

    # --- DEBUG STEP: List files in the working directory ---
    - name: Debug - List files in current directory
      run: ls -la

    # --- SCA & Container Scanning (Trivy) ---
    - name: Build Docker image
      run: docker build -t my-vulnerable-app:latest .

    - name: Run Trivy Container Image Scan (Vulnerabilities)
      run: |
        trivy image --exit-code 1 --severity HIGH,CRITICAL --format table my-vulnerable-app:latest

    - name: Run Trivy FS (Filesystem) Scan for Dependencies (SCA)
      run: |
        trivy fs --exit-code 1 --severity HIGH,CRITICAL --format table --vuln-type library .

 # --- Artifact Upload (Now it should work if semgrep.sarif exists!) ---
    - name: Upload Semgrep SARIF Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: semgrep-sarif-results # 4 spaces from `with:`
        path: ./semgrep.sarif      # 4 spaces from `with:`